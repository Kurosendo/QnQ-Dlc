<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <QuestScriptDef>
    <defName>Hospitality_Animals</defName>
    <rootSelectionWeight>0.7</rootSelectionWeight>
    <rootMinPoints>0</rootMinPoints>
    <rootMinProgressScore>3</rootMinProgressScore>
    <expireDaysRange>4~8</expireDaysRange>
    <defaultChallengeRating>1</defaultChallengeRating>
    <canGiveRoyalFavor>true</canGiveRoyalFavor>
    <successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">HospitalitySuccess_Animals</successHistoryEvent>
    <questDescriptionAndNameRules>
      <rulesStrings>
        <li>lodgersLabel->[lodgersPawnKind_label]</li>
        <li>lodgersLabelPlural->[lodgersPawnKind_labelPlural]</li>
      </rulesStrings>
    </questDescriptionAndNameRules>
    <questNameRules>
      <rulesStrings>
        <!-- Single -->
        <li>questName(lodgersCount==1)->the [animalAdj] [lodgersLabel]</li>
        <li>questName(lodgersCount==1)->a [animalAdj] [lodgersLabel]</li>
        <li>questName(lodgersCount==1)->[animalAdj] [lodgersLabel]</li>
        <li>questName(lodgersCount==1)->[lodgersLabel]-sitting</li>
        <li>questName(lodgersCount==1)->keeping [lodgers0_nameDef]</li>
        <li>questName(lodgersCount==1)->poor little [lodgers0_nameDef]</li>

        <!-- Multiple -->
        <li>questName(lodgersCount>=2)->the [animalAdj] [lodgersLabelPlural]</li>  
        <li>questName(lodgersCount>=2)->[animalAdj] [lodgersLabelPlural]</li>
        <li>questName(lodgersCount>=2)->[animalAdj] [lodgersLabelPlural]</li>
        <li>questName(lodgersCount>=2)->[lodgersLabel]-sitting</li>
        <li>questName(lodgersCount==2)->keeping [lodgersLabelPlural]</li>

        <!-- Pieces -->
        <li>animalAdj->adorable</li>
        <li>animalAdj->doe-eyed</li>
        <li>animalAdj->loyal</li>
        <li>animalAdj->loving</li>
        <li>animalAdj->quiet</li>
        <li>animalAdj->gentle</li>
        <li>animalAdj->proud</li>
        <li>animalAdj(generateThreats==true)->hunted</li>
        <li>animalAdj(generateThreats==true)->frightened</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <include>
        <li>QuestHospitalityCommon</li>
      </include>
      <rulesStrings>

        <!-- Re-used content -->
        <li>threatsInfoMechClustersSingleAnimal->For unknown reasons, the [lodgersLabel] has been targeted by an orbiting mechanoid swarm.</li>
        <li>threatsInfoMechClustersMultiAnimal->For unknown reasons, the [lodgersLabelPlural] have been targeted by an orbiting mechanoid swarm.</li>
        <li>threatsInfoMechRaidsSingleAnimal->For unknown reasons, the [lodgersLabel] has been targeted by a mechanoid hive.</li>
        <li>threatsInfoMechRaidsMultiAnimal->For unknown reasons, the [lodgersLabelPlural] have been targeted by a mechanoid hive.</li>

        <!-- Asker is null, single animal -->
        <li>questDescription(askerIsNull==true,lodgersCount==1)->An animal rescue organization wants you to take care of a [lodgersLabel] named [lodgers0_nameDef] at [map_definite] for [shuttleDelayTicks_duration]. [healthInfo][threatsInfo1][commonDescEnding]</li>
        <li>threatsInfo1(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\nThe animal rescue activists stole [lodgers0_nameDef] from a slaughtering ceremony being held by [enemyFaction_name]. Now the [enemyFaction_pawnsPlural] are coming to seek revenge. If you accept [lodgers0_nameDef], [enemyGroupsParagraph]</li>
        <li>threatsInfo1(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo1(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo1(generateThreats==false)-></li>

        <!-- Asker is null, multiple animals -->
        <li>questDescription(askerIsNull==true,lodgersCount>=2)->An animal rescue organization wants you to take care of [lodgersCount] [lodgersLabelPlural] at [map_definite] for [shuttleDelayTicks_duration]. [healthInfo][threatsInfo2][commonDescEnding]</li>
        <li>victim->child</li>
        <li>victim->woman</li>
        <li>victim->man</li>
        <li>victim->[PersonJob]</li>
        <li>victim(generateThreats==true,threatType==Raids)->friend of the [enemyFaction_leaderTitle] of [enemyFaction_name]</li>
        <li>threatsInfo2(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\nUnfortunately, these [lodgersLabelPlural] were recently implicated in the death of a [victim]. Now, [enemyFaction_pawnsPlural] from [enemyFaction_name] are hunting them for ritual revenge. If you accept the [lodgersLabelPlural], [enemyGroupsParagraph]</li>
        <li>threatsInfo2(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo2(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo2(generateThreats==false)-></li>

        <!-- Asker is faction leader, single animal -->
        <li>questDescription(asker_factionLeader==True,lodgersCount==1,priority=1)->[asker_nameFull], [asker_faction_leaderTitle] of [asker_faction_name] is looking for a safe settlement to take care of [asker_possessive] pet [lodgersLabel] [lodgers0_nameDef] for [shuttleDelayTicks_duration]. [healthInfo][threatsInfo3][commonDescEnding]</li>
        <li>threatsInfo3(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\n[enemyFaction_pawnsPlural] from [enemyFaction_name] are trying to kill poor little [lodgers0_nameDef] to get at [asker_nameDef]. If you accept [lodgers0_nameDef], [enemyGroupsParagraph]</li>
        <li>threatsInfo3(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo3(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo3(generateThreats==false)-></li>

        <!-- Asker is faction leader, multiple animals -->
        <li>questDescription(asker_factionLeader==True,lodgersCount>=2,priority=1)->[asker_nameFull], [asker_faction_leaderTitle] of [asker_faction_name], is making a request. [asker_pronoun] wants you to take care of [lodgersCount] [lodgersLabelPlural] at [map_definite] for [shuttleDelayTicks_duration]. [healthInfo][threatsInfo4][commonDescEnding]</li>
        <li>threatsInfo4(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\nThe [lodgersLabelPlural] are necessary for [asker_nameDef] to fulfill an important trade promise. To provoke conflict, [enemyFaction_name] is sending [enemyFaction_pawnsPlural] after them. If you accept the [lodgersLabelPlural], [enemyGroupsParagraph]</li>
        <li>threatsInfo4(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo4(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo4(generateThreats==false)-></li>

        <!-- Asker is royal, single animal -->
        <li>questDescription(asker_royalInCurrentFaction==True,lodgersCount==1,priority=1)->[asker_nameFull], a [asker_royalTitleInCurrentFaction] of [asker_faction_name], is making a request. [asker_pronoun] wants you to take care of [asker_possessive] favorite pet, the [lodgersLabel] [lodgers0_nameDef], at [map_definite] for [shuttleDelayTicks_duration]. [healthInfo][threatsInfo5][commonDescEnding]</li>
        <li>threatsInfo5(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\n[lodgers0_nameDef] is a gift promised to [asker_nameDef]'s child for a marriage ceremony. To try to prevent the marriage, [enemyFaction_name] is sending [enemyFaction_pawnsPlural] after [lodgers0_objective]. If you accept [lodgers0_nameDef], [enemyGroupsParagraph]</li>
        <li>threatsInfo5(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo5(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersSingleAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo5(generateThreats==false)-></li>

        <!-- Asker is royal, multiple animals -->
        <li>questDescription(asker_royalInCurrentFaction==True,lodgersCount>=2,priority=1)->[asker_nameFull], a [asker_royalTitleInCurrentFaction] of [asker_faction_name], is making a request. [asker_pronoun] wants you to take care of [lodgersCount] [lodgersLabelPlural] at [map_definite] for [shuttleDelayTicks_duration]. The [lodgersLabelPlural] are [asker_nameDef]'s favorite pets, and [asker_pronoun] wants them to see the world outside [asker_possessive] royal court. [healthInfo][threatsInfo6][commonDescEnding]</li>
        <li>threatsInfo6(generateThreats==true,threatType==Raids,enemyFaction!=Mechanoid)->\n\nUnfortunately, [enemyFaction_name] is hunting the [lodgersLabelPlural] to try to hurt [asker_nameDef] personally. If you accept the [lodgersLabelPlural], [enemyGroupsParagraph]</li>
        <li>threatsInfo6(generateThreats==true,threatType==Raids,enemyFaction==Mechanoid)->\n\n[threatsInfoMechRaidsMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo6(generateThreats==true,threatType==MechClusters)->\n\n[threatsInfoMechClustersMultiAnimal] [enemyGroupsParagraph]</li>
        <li>threatsInfo6(generateThreats==false)-></li>

        <li>letterSubject(priority=1)->{SUBJECT_definite} the [lodgersLabel]</li>

      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_SubScript">
          <def>Hospitality_Util_Setup</def>
        </li>

        <!-- Choose animal kind -->
        <li Class="QuestNode_GetPawnKind">
          <storeAs>lodgersPawnKind</storeAs>
          <options>
            <li>
              <anyAnimal>true</anyAnimal>
              <mustBeAbleToHandleAnimal>true</mustBeAbleToHandleAnimal>
              <onlyAllowedFleshType>Normal</onlyAllowedFleshType>
              <weight>1</weight>
            </li>
          </options>
        </li>

        <!-- Decide random lodger conditions -->
        <li Class="QuestNode_SubScript">
          <def>Util_DecideRandomLodgerConditions</def>
          <parms>
            <noConditionsWeight>1</noConditionsWeight>
            <noWorkWeight>0</noWorkWeight>
            <paralysisWeight>1</paralysisWeight>
            <bloodRotWeight>1</bloodRotWeight>
            <bloodRotAndParalysisWeight>0</bloodRotAndParalysisWeight>
            <moodThresholdWeight>0</moodThresholdWeight>
            <noConditionsMaxPoints>701</noConditionsMaxPoints>
          </parms>
        </li>

        <!-- If 1 star quest with no lodger conditions, increase number of lodgers with points  -->
        <li Class="QuestNode_Less">
          <value1>$challengeRating</value1>
          <value2>2</value2>
          <node Class="QuestNode_IsTrue">
            <value>$lodgersHaveNoConditions</value>
            <node Class="QuestNode_SubScript">
              <def>Hospitality_Util_DecideLodgerCountFromPoints</def>
              <parms>
                <pointsCurve>
                  <points>
                    <li>(0,  1)</li>
                    <li>(800, 5)</li>
                    <li>(3000, 20)</li>
                    <li>(4000, 30)</li>
                    <li>(6000, 40)</li>
                  </points>
                </pointsCurve>
              </parms>
            </node>
          </node>
        </li>  

        <li Class="QuestNode_IsSet">
          <name>lodgersCount</name>
          <elseNode Class="QuestNode_SubScript">
            <def>Hospitality_Util_DecideRandomLodgerCount</def>
          </elseNode>
        </li>

        <!-- Generate lodger animals -->
        <li Class="QuestNode_LoopCount">
          <loopCount>$lodgersCount</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <kindDef>$lodgersPawnKind</kindDef>
            <addToList>lodgers</addToList>
            <ensureNonNumericName>true</ensureNonNumericName>
          </node>
        </li>
        
        <!-- Home faction -->
        <li Class="QuestNode_ExtraFaction">
          <factionOf>$asker</factionOf>
          <pawns>$lodgers</pawns>
          <factionType>HomeFaction</factionType>
        </li>

        <!-- Apply lodger conditions -->
        <li Class="QuestNode_SubScript">
          <def>Util_ApplyLodgerConditions</def>
        </li>

        <!-- Execute main worker script -->
        <li Class="QuestNode_SubScript">
          <def>Hospitality_Util_Worker</def>
        </li>
        
        <!-- Release any paralyzed animals on cleanup -->
        <li Class="QuestNode_ReleaseParalyzedAnimals">
          <pawns>$lodgers</pawns>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>


</Defs>
